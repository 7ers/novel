<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.novel.dao.NovelChapterMapper">
  <resultMap id="BaseResultMap" type="com.demo.novel.entity.NovelChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sectionid" jdbcType="INTEGER" property="sectionid" />
    <result column="chaptername" jdbcType="VARCHAR" property="chaptername" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.demo.novel.entity.NovelChapter">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sectionid, chaptername
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_novel_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByNovelId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select count(id)
    from t_novel_chapter
    where sectionid = #{sectionid,jdbcType=INTEGER}
  </select>
  <select id="selectChapterList" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_novel_chapter
    where sectionid = #{sectionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_novel_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.demo.novel.entity.NovelChapter">
    insert into t_novel_chapter (sectionid, chaptername,
      content)
    values (#{sectionid,jdbcType=INTEGER}, #{chaptername,jdbcType=VARCHAR},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.novel.entity.NovelChapter">
    insert into t_novel_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sectionid != null">
        sectionid,
      </if>
      <if test="chaptername != null">
        chaptername,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sectionid != null">
        #{sectionid,jdbcType=INTEGER},
      </if>
      <if test="chaptername != null">
        #{chaptername,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.novel.entity.NovelChapter">
    update t_novel_chapter
    <set>
      <if test="sectionid != null">
        sectionid = #{sectionid,jdbcType=INTEGER},
      </if>
      <if test="chaptername != null">
        chaptername = #{chaptername,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.demo.novel.entity.NovelChapter">
    update t_novel_chapter
    set sectionid = #{sectionid,jdbcType=INTEGER},
      chaptername = #{chaptername,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.novel.entity.NovelChapter">
    update t_novel_chapter
    set sectionid = #{sectionid,jdbcType=INTEGER},
      chaptername = #{chaptername,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>