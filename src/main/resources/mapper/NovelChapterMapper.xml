<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.novel.dao.NovelChapterMapper">
  <resultMap id="BaseResultMap" type="com.demo.novel.entity.NovelChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sectionid" jdbcType="VARCHAR" property="sectionid" />
    <result column="chapterid" jdbcType="VARCHAR" property="chapterid" />
    <result column="chaptername" jdbcType="VARCHAR" property="chaptername" />
    <result column="paymoney" jdbcType="VARCHAR" property="paymoney" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.demo.novel.entity.NovelChapter">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sectionid, chapterid,chaptername,paymoney
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_novel_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByNovelId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select count(id)
    from t_novel_chapter
    where sectionid = #{sectionid,jdbcType=VARCHAR}
  </select>
  <select id="selectChapterList" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_novel_chapter
    where sectionid = #{sectionid,jdbcType=VARCHAR}
  </select>
  <select id="selectContentByChapterID" parameterType="com.demo.novel.entity.NovelChapter" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Blob_Column_List" />
    from t_novel_chapter
    where sectionid = #{sectionid,jdbcType=VARCHAR} and chapterid = #{chapterid, jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_novel_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.demo.novel.entity.NovelChapter">
    insert into t_novel_chapter (sectionid, chaptername,
      content,chapterid,paymoney)
    values (#{sectionid,jdbcType=VARCHAR}, #{chaptername,jdbcType=VARCHAR},
      #{content,jdbcType=LONGVARCHAR},#{chapterid,jdbcType=VARCHAR},#{paymoney,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.novel.entity.NovelChapter">
    update t_novel_chapter
    set sectionid = #{sectionid,jdbcType=VARCHAR},
      chaptername = #{chaptername,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>