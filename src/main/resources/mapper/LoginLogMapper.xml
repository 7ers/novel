<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.novel.dao.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.demo.novel.entity.LoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="clientip" jdbcType="VARCHAR" property="clientip" />
    <result column="memberId" jdbcType="BIGINT" property="memberid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="lastUpdateTime" jdbcType="TIMESTAMP" property="lastupdatetime" />
    <result column="isDeleted" jdbcType="VARCHAR" property="isdeleted" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, clientip, memberId, createtime, lastUpdateTime, isDeleted, msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_log_login
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_log_login
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.demo.novel.entity.LoginLog">
    insert into t_log_login (username, clientip,
      memberId, createtime, lastUpdateTime, 
      isDeleted, msg)
    values (#{username,jdbcType=VARCHAR}, #{clientip,jdbcType=VARCHAR},
      #{memberid,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{lastupdatetime,jdbcType=TIMESTAMP}, 
      #{isdeleted,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.novel.entity.LoginLog">
    insert into t_log_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="clientip != null">
        clientip,
      </if>
      <if test="memberid != null">
        memberId,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lastupdatetime != null">
        lastUpdateTime,
      </if>
      <if test="isdeleted != null">
        isDeleted,
      </if>
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="clientip != null">
        #{clientip,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null">
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdatetime != null">
        #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.novel.entity.LoginLog">
    update t_log_login
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="clientip != null">
        clientip = #{clientip,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null">
        memberId = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastupdatetime != null">
        lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        isDeleted = #{isdeleted,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.novel.entity.LoginLog">
    update t_log_login
    set username = #{username,jdbcType=VARCHAR},
      clientip = #{clientip,jdbcType=VARCHAR},
      memberId = #{memberid,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      isDeleted = #{isdeleted,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>